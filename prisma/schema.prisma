generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  clerkUserId String   @unique
  name        String
  email       String   @unique
  imageUrl    String?
  industry    String? // Foreign key
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  bio        String?
  experience Int?
  skill      String[]

  resume      Resume?
  assessments Assessment[]
  coverLetter CoverLetter[]

  industryInsight IndustryInsight? @relation(fields: [industry], references: [industry])
}

model Resume {
  id        String   @id @default(cuid())
  userId    String   @unique
  content   String   @db.Text
  atsScore  Float?
  feedback  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Assessment {
  id             String   @id @default(cuid())
  userId         String
  quizScore      Float
  question       Json[] 
  category       String 
  improvementTip String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model CoverLetter {
  id             String   @id @default(uuid())
  userId         String
  content        String 
  jobDescription String?
  companyName    String
  jobTitle       String
  status         String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model IndustryInsight {
  id       String @id @default(cuid())
  industry String @unique

  salaryRange Json[] // Array of {role: string, min: float, max: float, median: float, location: string?}

  growthRate  Float
  demandLevel DemandLevel
  topSkills   String[]

  marketOutlook MarketOutlook
  keyTrends     String[]

  recommendedSkills String[]

  lastUpdated DateTime
  nextUpdate  DateTime

  users User[]

  @@index([industry])
}

enum DemandLevel {
  HIGH
  MEDIUM
  LOW
}

enum MarketOutlook {
  POSITIVE
  NEUTRAL
  NEGATIVE
}
